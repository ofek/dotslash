"use strict";(self.webpackChunkdotslash_website=self.webpackChunkdotslash_website||[]).push([[893],{3905:(e,n,t)=>{t.r(n),t.d(n,{MDXContext:()=>h,MDXProvider:()=>u,mdx:()=>b,useMDXComponents:()=>p,withMDXComponents:()=>c});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(){return o=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},o.apply(this,arguments)}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var h=r.createContext({}),c=function(e){return function(n){var t=p(n.components);return r.createElement(e,o({},n,{components:t}))}},p=function(e){var n=r.useContext(h),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=p(e.components);return r.createElement(h.Provider,{value:n},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,h=l(e,["components","mdxType","originalType","parentName"]),c=p(t),u=a,m=c["".concat(s,".").concat(u)]||c[u]||d[u]||o;return t?r.createElement(m,i(i({ref:n},h),{},{components:t})):r.createElement(m,i({ref:n},h))}));function b(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,s=new Array(o);s[0]=f;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i[m]="string"==typeof e?e:a,s[1]=i;for(var h=2;h<o;h++)s[h]=t[h];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},23818:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>h});var r=t(87462),a=(t(67294),t(3905));const o={sidebar_position:16},s="Generating DotSlash files Using GitHub Actions",i={unversionedId:"github",id:"github",title:"Generating DotSlash files Using GitHub Actions",description:"As a convenience to your users, you may want to generate DotSlash files for the",source:"@site/docs/github.md",sourceDirName:".",slug:"/github",permalink:"/docs/github",draft:!1,editUrl:"https://github.com/facebook/dotslash/tree/main/website/docs/github.md",tags:[],version:"current",sidebarPosition:16,frontMatter:{sidebar_position:16},sidebar:"tutorialSidebar",previous:{title:"Command Line Flags",permalink:"/docs/flags"},next:{title:"How DotSlash Works",permalink:"/docs/execution"}},l={},h=[],c={toc:h},p="wrapper";function u(e){let{components:n,...t}=e;return(0,a.mdx)(p,(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.mdx)("h1",{id:"generating-dotslash-files-using-github-actions"},"Generating DotSlash files Using GitHub Actions"),(0,a.mdx)("p",null,"As a convenience to your users, you may want to generate DotSlash files for the\nexecutables you publish as part of a\n",(0,a.mdx)("a",{parentName:"p",href:"https://docs.github.com/en/repositories/releasing-projects-on-github/about-releases"},"GitHub release"),".\nThe\n",(0,a.mdx)("a",{parentName:"p",href:"https://github.com/facebook/dotslash-publish-release"},"dotslash-publish-release"),"\nGitHub action is designed to help automate this."),(0,a.mdx)("p",null,"The\n",(0,a.mdx)("a",{parentName:"p",href:"https://github.com/facebook/dotslash-publish-release#readme"},"action's README"),"\nshould have the most up-to-date documentation, but the general idea is that you\nrun the action after the artifacts for ",(0,a.mdx)("em",{parentName:"p"},"all")," of your supported platforms are\ngenerated, specifying the ",(0,a.mdx)("inlineCode",{parentName:"p"},"workflow_run.workflows")," as appropriate for your\nrelease process:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-yaml"},"name: Generate DotSlash files\n\non:\n  workflow_run:\n    # These must match the names of the workflows that publish\n    # artifacts to your GitHub release.\n    workflows: [linux-release, macos-release, windows-release]\n    types:\n      - completed\n\njobs:\n  generate-dotslash-files:\n    name: Generating and uploading DotSlash files\n    runs-on: ubuntu-latest\n    if: ${{ github.event.workflow_run.conclusion == 'success' }}\n    steps:\n      - uses: facebook/dotslash-publish-release@v1\n        # This is necessary because the action uses\n        # `gh release upload` to publish the generated DotSlash file(s)\n        # as part of the release.\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n        with:\n          # Additional file that lives in your repo that defines\n          # how your DotSlash file(s) should be generated.\n          config: .github/workflows/dotslash-config.json\n          # Tag for the release to to target.\n          tag: ${{ github.event.workflow_run.head_branch }}\n")),(0,a.mdx)("p",null,"The bulk of the configuration is not in your ",(0,a.mdx)("inlineCode",{parentName:"p"},".yml")," file, but in a JSON file\nspecified by the ",(0,a.mdx)("inlineCode",{parentName:"p"},"config")," parameter to the action. For example, if this GitHub\naction were defined in the ",(0,a.mdx)("a",{parentName:"p",href:"https://github.com/facebook/hermes"},"facebook/hermes"),"\nrepository on GitHub, and the contents of\n",(0,a.mdx)("inlineCode",{parentName:"p"},".github/workflows/dotslash-config.json")," were as follows:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-json"},'{\n  "outputs": {\n    "hermes": {\n      "platforms": {\n        "macos-x86_64": {\n          "regex": "^hermes-cli-darwin-",\n          "path": "hermes"\n        },\n        "macos-aarch64": {\n          "regex": "^hermes-cli-darwin-",\n          "path": "hermes"\n        },\n        "linux-x86_64": {\n          "regex": "^hermes-cli-linux-",\n          "path": "hermes"\n        },\n        "windows-x86_64": {\n          "regex": "^hermes-cli-windows-",\n          "path": "hermes.exe"\n        }\n      }\n    }\n  }\n}\n')),(0,a.mdx)("p",null,"Then this action would have added the following DotSlash file named ",(0,a.mdx)("inlineCode",{parentName:"p"},"hermes")," to\nthe ",(0,a.mdx)("a",{parentName:"p",href:"https://github.com/facebook/hermes/releases/tag/v0.12.0"},"v0.12.0 release"),":"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-json"},'#!/usr/bin/env dotslash\n\n{\n  "name": "hermes",\n  "platforms": {\n    "macos-x86_64": {\n      "size": 10600817,\n      "hash": "blake3",\n      "digest": "25f984911f199f9229ca0327c52700fa9a8db9aefe95e84f91ba6be69902436a",\n      "format": "tar.gz",\n      "path": "hermes",\n      "providers": [\n        {\n          "url": "https://github.com/facebook/hermes/releases/download/v0.12.0/hermes-cli-darwin-v0.12.0.tar.gz"\n        },\n        {\n          "type": "github-release",\n          "repo": "https://github.com/facebook/hermes",\n          "tag": "v0.12.0",\n          "name": "hermes-cli-darwin-v0.12.0.tar.gz"\n        }\n      ]\n    },\n    "macos-aarch64": {\n      "size": 10600817,\n      "hash": "blake3",\n      "digest": "25f984911f199f9229ca0327c52700fa9a8db9aefe95e84f91ba6be69902436a",\n      "format": "tar.gz",\n      "path": "hermes",\n      "providers": [\n        {\n          "url": "https://github.com/facebook/hermes/releases/download/v0.12.0/hermes-cli-darwin-v0.12.0.tar.gz"\n        },\n        {\n          "type": "github-release",\n          "repo": "https://github.com/facebook/hermes",\n          "tag": "v0.12.0",\n          "name": "hermes-cli-darwin-v0.12.0.tar.gz"\n        }\n      ]\n    },\n    "linux-x86_64": {\n      "size": 47099598,\n      "hash": "blake3",\n      "digest": "8d2c1bcefc2ce6e278167495810c2437e8050780ebb4da567811f1d754ad198c",\n      "format": "tar.gz",\n      "path": "hermes",\n      "providers": [\n        {\n          "url": "https://github.com/facebook/hermes/releases/download/v0.12.0/hermes-cli-linux-v0.12.0.tar.gz"\n        },\n        {\n          "type": "github-release",\n          "repo": "https://github.com/facebook/hermes",\n          "tag": "v0.12.0",\n          "name": "hermes-cli-linux-v0.12.0.tar.gz"\n        }\n      ]\n    },\n    "windows-x86_64": {\n      "size": 17456100,\n      "hash": "blake3",\n      "digest": "7efee4f92a05e34ccfa7c21c7a05f939d8b724bc802423d618db22efb83bfe1b",\n      "format": "tar.gz",\n      "path": "hermes.exe",\n      "providers": [\n        {\n          "url": "https://github.com/facebook/hermes/releases/download/v0.12.0/hermes-cli-windows-v0.12.0.tar.gz"\n        },\n        {\n          "type": "github-release",\n          "repo": "https://github.com/facebook/hermes",\n          "tag": "v0.12.0",\n          "name": "hermes-cli-windows-v0.12.0.tar.gz"\n        }\n      ]\n    }\n  }\n}\n')),(0,a.mdx)("p",null,"As you can see, the ",(0,a.mdx)("inlineCode",{parentName:"p"},'"platforms"')," in the JSON config mirrors the ",(0,a.mdx)("inlineCode",{parentName:"p"},'"platforms"'),"\nin the generated DotSlash file. Each key in the ",(0,a.mdx)("inlineCode",{parentName:"p"},'"outputs"')," map in the JSON file\nadds a generated DotSlash file with the same name to the GitHub release. This\nmakes it possible to generate an arbitrary number of DotSlash files from a\nsingle invocation of the GitHub action."))}u.isMDXComponent=!0}}]);